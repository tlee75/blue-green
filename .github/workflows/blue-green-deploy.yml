name: Blue Green Deployment
run-name: Deploy to "${{ inputs.deploy-color }}" by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      image-tag:
        type: string
        description: Image Tag
      deploy-color:
        type: choice
        options:
        - blue
        - green
        description: Deploy Color
      deploy-only:
        type: boolean
        description: Deploy Only
      gh-environment:
        type: choice
        options:
        - dev
        - prod
        description: Github Environment


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build, tag, and push image to Dockerhub
        env:
          IMAGE_TAG: ${{ inputs.image-tag }}
          IMAGE_NAME: th3-server
          SWITCH_TRAFFIC: ${{ inputs.switch-traffic }}
        run: |
          docker build -t docker.io/${{ vars.DOCKERHUB_ACCOUNT }}/$IMAGE_NAME:$IMAGE_TAG -f dockerfiles/th3-server/Dockerfile .
          docker push docker.io/${{ vars.DOCKERHUB_ACCOUNT }}/$IMAGE_NAME:$IMAGE_TAG

  deployment:
    name: Deploy
    needs: [ build ]
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.gh-environment }}
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Render Templates
        uses: ./.github/actions/render-templates
        with:
          path: ./manifests
          image-tag: ${{ inputs.image-tag }}
          deploy-color: ${{ inputs.deploy-color }}
      - uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-host: ${{ vars.SSH_SERVER_URL }}
      - name: Validate and apply deployment
        run: |
          echo "Applying Deployment"
          ssh -o StrictHostKeychecking=no ${{ vars.SERVER_USERNAME }}@${{ vars.SSH_SERVER_URL }} \
            "kubectl apply --dry-run=client -o yaml -f - | kubectl apply -f -" < ./manifests/th3-server-deploy.yml
      - name: Create color specific services for testing
        run: |
          ssh -o StrictHostKeychecking=no ${{ vars.SERVER_USERNAME }}@${{ vars.SSH_SERVER_URL }} \
            "kubectl apply --dry-run=client -o yaml -f - | kubectl apply -f -" < ./manifests/th3-server-blue-svc.yml
          ssh -o StrictHostKeychecking=no ${{ vars.SERVER_USERNAME }}@${{ vars.SSH_SERVER_URL }} \
            "kubectl apply --dry-run=client -o yaml -f - | kubectl apply -f -" < ./manifests/th3-server-green-svc.yml
      - name: Apply Ingress
        run: |
          ssh -o StrictHostKeychecking=no ${{ vars.SERVER_USERNAME }}@${{ vars.SSH_SERVER_URL }} \
            "kubectl apply --dry-run=client -o yaml -f - | kubectl apply -f -" < ./manifests/th3-server-ingress.yml
      - name: Postflight
        run: |
          echo "Attempting to fetch version"
          curl ${{ inputs.deploy-color }}-th3-server.tylerlee.dev/version

  manual-approval:
    if: ${{ inputs.deploy-only != true }}
    name: Manual Approval
    needs: [ deployment ]
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.gh-environment }}-manual
    steps:
      - name: Display Approver
        run: |
          echo "Job has been approved by $GITHUB_TRIGGERING_ACTOR"

  switch-traffic:
    name: Switch Traffic
    needs: [ manual-approval ]
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.gh-environment }}
    steps:
      - uses: actions/checkout@v4.1.1
      # start monitor script in bg and get PID with $!
      # Render template variables
      # switch traffic with: kubectl apply -f blue-green-svc.yml --dry-run=client -o yaml | kubectl apply -f -
      # stop PID and Upload log artifact
      # test
